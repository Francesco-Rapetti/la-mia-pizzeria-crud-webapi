﻿@{
	ViewData["Title"] = "Home Page";
	Layout = "_MyLayout";
	@model List<Pizza>
}

<h1 class="text-center mt-4">La mia pizzeria</h1>
<div class="d-flex justify-content-center flex-wrap gap-3 my-5">
@{
	// Model.Clear(); // test empty list
	if (Model.Count > 0)
	{
		foreach (Pizza pizza in Model)
		{
			<a asp-action="Show" asp-route-id="@pizza.Id" class="text-decoration-none">
				<div class="card glass h-100" style="width: 18rem;">
					<img src="@Url.Content(pizza.Image)" class="card-img-top" alt="...">
					<div class="card-body">
						<h5 class="card-title">@pizza.Name <span class="badge @("text-bg-" + (pizza.Category?.Color ?? "secondary d-none"))">@(pizza.Category?.Name ?? "")</span></h5>

						<div class="d-flex gap-1 mt-3 mb-2 flex-wrap">
								@foreach (Ingredient ingredient in pizza.Ingredients?.ToList() ?? new List<Ingredient>())
								{
									<span class="badge rounded-pill bg-secondary">@ingredient.Name</span>
								}
						</div>

						<p class="card-text">@pizza.Description</p>
					</div>
					<ul class="list-group list-group-flush fa-ul">
						<li class="list-group-item bg-transparent"><span class="fa-li"><i class="fa-solid fa-coins"></i></span>@pizza.Price.ToString("F2")</li>
					</ul>
				</div>
			</a>
					
		}
	} else
	{
		<div class="alert alert-danger">Questo locale non ha nessuna pizza.</div>
	}
}
</div>
<div class="position-sticky p-3 bottom-0 d-flex justify-content-end">
	<a class="btn btn-outline-light glass-dark rounded-4 border-0 fs-2 d-flex align-items-center justify-content-center @(ViewContext.HttpContext.Request.Path == "/Pizza/Create" ? "disabled" : "")" style="width: 4.5rem; height: 4.5rem" href="@Url.Action("Create", "Pizza")"><i class="fa-solid fa-plus"></i></a>
</div>

